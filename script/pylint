#!/usr/bin/env python3
import subprocess
from pathlib import Path
from typing import Union

SOURCE_ROOT = Path(__file__).parent.parent

IGNORE_PATHS = [
    "src/ert/_c_wrappers",
    "src/ert/gui",
    "src/ert/logging",
    "src/ert/analysis/_es_update.py",
    "src/ert/data",
    "src/_ert_job_runner",
    "src/ert/shared",
    "src/ert/__main__.py",
    "src/ert/cli",
    "src/ert/ensemble_evaluator",
    "src/ert/services",
    "src/ert/dark_storage",
    "src/ert/callbacks.py",
]

CHECKS = [
    "access-member-before-definition",
    "arguments-differ",
    "arguments-renamed",
    "assert-on-string-literal",
    "bad-classmethod-argument",
#    "bad-thread-instantiation",
    "chained-comparison",
    "comparison-with-callable",
    "consider-iterating-dictionary",
    "consider-using-dict-items",
    "consider-using-enumerate",
    "consider-using-f-string",
    "consider-using-from-import",
    "consider-using-generator",
    "consider-using-get",
    "consider-using-in",
    "consider-using-max-builtin",
    "consider-using-min-builtin",
    "consider-using-set-comprehension",
    "consider-using-with",
    "dangerous-default-value",
    "deprecated-method",
    "duplicate-key",
    "empty-docstring",
    "expression-not-assigned",
    "global-statement",
    "global-variable-not-assigned",
    "implicit-str-concat",
    "logging-not-lazy",
    "missing-final-newline",
    "no-else-break",
    "no-else-continue",
#    "no-else-raise",
    "no-member",
    "no-method-argument",
    "no-value-for-parameter",
    "not-async-context-manager",
    "not-callable",
    "parse-error",
    "pointless-statement",
    "pointless-string-statement",
    "redefined-builtin",
    "redundant-unittest-assert",
    "reimported",
    "simplifiable-if-statement",
    "subprocess-run-check",
    "super-with-arguments",
#    "superfluous-parens",
    "too-many-lines",
    "too-many-nested-blocks",
    "undefined-all-variable",
    "undefined-loop-variable",
    "undefined-variable",
    "unexpected-keyword-arg",
    "ungrouped-imports",
    "unidiomatic-typecheck",
    "unnecessary-comprehension",
    "unnecessary-dunder-call",
    "unnecessary-lambda",
    "unnecessary-lambda-assignment",
    "unneeded-not",
    "unspecified-encoding",
    "unsubscriptable-object",
    "unsupported-assignment-operation",
    "unsupported-binary-operation",
    "unused-import",
    "use-a-generator",
#    "use-dict-literal",
    "use-implicit-booleaness-not-comparison",
    "use-maxsplit-arg",
    "used-before-assignment",
    "useless-import-alias",
    "useless-object-inheritance",
    "useless-return",
    "useless-super-delegation",
]


def call(*args: Union[str, Path]) -> None:
    print("Running: pylint " + " ".join(map(str, args)))
    subprocess.check_call(["pylint", *args])


def main() -> None:
    call(
        SOURCE_ROOT / "src/ert",
        "--ignore-paths",
        ",".join(str(SOURCE_ROOT / x) for x in IGNORE_PATHS),
    )

    call(
        "--disable=all",
        "--enable",
        ",".join(sorted(CHECKS)),
        SOURCE_ROOT / "docs",
        SOURCE_ROOT / "script",
        SOURCE_ROOT / "src",
        SOURCE_ROOT / "tests",
        SOURCE_ROOT / "test-data",
    )


if __name__ == "__main__":
    main()
